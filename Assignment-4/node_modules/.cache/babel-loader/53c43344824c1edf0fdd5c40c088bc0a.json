{"ast":null,"code":"import * as ActionTypes from './actionTypes';\nexport const Leaders = (state = {\n  isLoading: true,\n  errMess: null,\n  leaders: []\n}, action) => {\n  switch (action.type) {\n    case ActionTypes.ADD_LEADERS:\n      return { ...state,\n        isLoading: false,\n        errMess: null,\n        leaders: action.payload\n      };\n\n    case ActionTypes.LEADERS_LOADING:\n      return { ...state,\n        isLoading: true,\n        errMess: null,\n        leaders: []\n      };\n\n    case ActionTypes.LEADERS_FAILED:\n      return { ...state,\n        isLoading: false,\n        errMess: action.payload,\n        leaders: []\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/home/saloni/Downloads/coursera/React/Assignment-4/src/redux/leaders.js"],"names":["ActionTypes","Leaders","state","isLoading","errMess","leaders","action","type","ADD_LEADERS","payload","LEADERS_LOADING","LEADERS_FAILED"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,eAA7B;AAEA,OAAO,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAC;AAC1BC,EAAAA,SAAS,EAAC,IADgB;AAE1BC,EAAAA,OAAO,EAAC,IAFkB;AAG1BC,EAAAA,OAAO,EAAC;AAHkB,CAAP,EAIrBC,MAJqB,KAIZ;AACP,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKP,WAAW,CAACQ,WAAjB;AACI,aAAO,EAAE,GAAGN,KAAL;AAAWC,QAAAA,SAAS,EAAC,KAArB;AAA2BC,QAAAA,OAAO,EAAC,IAAnC;AAAwCC,QAAAA,OAAO,EAACC,MAAM,CAACG;AAAvD,OAAP;;AAEA,SAAKT,WAAW,CAACU,eAAjB;AACI,aAAO,EAAE,GAAGR,KAAL;AAAYC,QAAAA,SAAS,EAAE,IAAvB;AAA6BC,QAAAA,OAAO,EAAE,IAAtC;AAA4CC,QAAAA,OAAO,EAAE;AAArD,OAAP;;AAEJ,SAAKL,WAAW,CAACW,cAAjB;AACI,aAAO,EAAE,GAAGT,KAAL;AAAYC,QAAAA,SAAS,EAAE,KAAvB;AAA8BC,QAAAA,OAAO,EAAEE,MAAM,CAACG,OAA9C;AAAuDJ,QAAAA,OAAO,EAAE;AAAhE,OAAP;;AAEJ;AACI,aAAOH,KAAP;AAXZ;AAaH,CAlBM","sourcesContent":["import * as ActionTypes from './actionTypes';\n\nexport const Leaders = (state={\n    isLoading:true,\n    errMess:null,\n    leaders:[]\n},action)=>{\n    switch(action.type){\n        case ActionTypes.ADD_LEADERS:\n            return { ...state,isLoading:false,errMess:null,leaders:action.payload};\n\n            case ActionTypes.LEADERS_LOADING:\n                return { ...state, isLoading: true, errMess: null, leaders: [] };\n    \n            case ActionTypes.LEADERS_FAILED:\n                return { ...state, isLoading: false, errMess: action.payload, leaders: [] };\n    \n            default:\n                return state;\n    }\n}"]},"metadata":{},"sourceType":"module"}